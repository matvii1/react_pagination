{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","tabsCount","Math","ceil","pageArrayItems","currentItem","className","classNames","disabled","href","onClick","Array","fill","map","_","index","currentIndex","active","i","items","from","to","numbers","n","push","getNumbers","App","useState","page","setPage","setPerPage","startValue","endValue","length","id","value","onChange","event","target","htmlFor","arg","ReactDOM","render","document","getElementById"],"mappings":"oNASaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAC9BM,EAAkBN,EAAUC,EAAeF,EAC7CC,GAAYA,EAAUG,EAAaJ,GACnCC,EACEO,EAAcN,EAAcD,EAAUA,EAE5C,OACE,qCACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YACxB,CAAEC,SAA0B,IAAhBT,IADd,SAGE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,kBAAMV,EAAaD,EAAc,IAL5C,oBAWD,IAAIY,MAAMV,GAAWW,KAAK,GAAGC,KAAI,SAACC,EAAGC,GACpC,IAAMC,EAAeD,EAAQ,EAE7B,OACE,oBAAIT,UAAWC,IACb,YACA,CAAEU,OAAQlB,IAAgBiB,IAF5B,SAKE,mBACE,UAAQ,WACRV,UAAU,YACVG,KAAI,WAAMO,GACVN,QAAS,kBAAMV,EAAagB,IAJ9B,SAMGA,SAMT,oBAAIV,UAAWC,IAAW,YACxB,CAAEC,SAAUT,IAAgBE,IAD9B,SAIE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QAAS,kBAAMV,EAAaD,EAAc,IAL5C,uBAWJ,6BACG,IAAIY,MAAMP,GAAgBQ,KAAK,GAAGC,KAAI,SAACC,EAAGI,GAAJ,OACrC,oBAAI,UAAQ,OAAZ,wBACYA,EAAI,EAAKb,cCxEzBc,ECLC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDFKG,CAAW,EAAG,IACzBZ,KAAI,SAAAU,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,GAAvC,mBAAO7B,EAAP,KAAgBgC,EAAhB,KACMC,EAAaH,EAAO9B,EAAUA,EAAU,EACxCkC,EAAWJ,EAAO9B,EAAUqB,EAAMc,OACpCd,EAAMc,OACNL,EAAO9B,EAEX,OACE,sBAAKQ,UAAU,YAAf,UACE,uDACA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWsB,EADX,mBAC0BG,EAD1B,cAC0CC,EAD1C,aAIA,sBAAK1B,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,MAAOrC,EACPsC,SAAU,SAAAC,GACRP,GAAYO,EAAMC,OAAOH,OACzBN,EAAQ,IAPZ,UAUE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOsB,EAAMc,OACbnC,QAASA,EACTC,YAAa6B,EACb5B,aAAc,SAACwC,GAAD,OAAiBX,EAAQW,UEhD/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.23c41059.chunk.js","sourcesContent":["import classNames from 'classnames';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const tabsCount = Math.ceil(total / perPage);\n  const pageArrayItems = (perPage * currentPage) > total\n    ? perPage - ((perPage * tabsCount) - total)\n    : perPage;\n  const currentItem = currentPage * perPage - perPage;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item',\n          { disabled: currentPage === 1 })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={currentPage === 1}\n            onClick={() => onPageChange(currentPage - 1)}\n          >\n            «\n          </a>\n        </li>\n\n        {new Array(tabsCount).fill(0).map((_, index) => {\n          const currentIndex = index + 1;\n\n          return (\n            <li className={classNames(\n              'page-item',\n              { active: currentPage === currentIndex },\n            )}\n            >\n              <a\n                data-cy=\"pageLink\"\n                className=\"page-link\"\n                href={`#${currentIndex}`}\n                onClick={() => onPageChange(currentIndex)}\n              >\n                {currentIndex}\n              </a>\n            </li>\n          );\n        })}\n\n        <li className={classNames('page-item',\n          { disabled: currentPage === tabsCount })}\n        >\n\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={currentPage === tabsCount}\n            onClick={() => onPageChange(currentPage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {new Array(pageArrayItems).fill(0).map((_, i) => (\n          <li data-cy=\"item\">\n            {`Item ${(i + 1) + currentItem}`}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [perPage, setPerPage] = useState(3);\n  const startValue = page * perPage - perPage + 1;\n  const endValue = page * perPage > items.length\n    ? items.length\n    : page * perPage;\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startValue} - ${endValue} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={event => {\n              setPerPage(+event.target.value);\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={page}\n        onPageChange={(arg: number) => setPage(arg)}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}